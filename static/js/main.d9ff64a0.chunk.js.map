{"version":3,"sources":["utils/config.ts","utils/converter.ts","components/UnitConverter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["UnitTypes","key","text","UnitsMap","length","FactorsMap","meter","kilometer","centimeter","millimeter","micrometer","nanometer","mile","yard","foot","inch","convert","type","from","to","value","fullWidth","width","UnitConverter","React","useState","setType","subTypes","setSubTypes","setFrom","setTo","inputLeft","setInputLeft","inputRight","setInputRight","onChangeInputLeft","useCallback","_event","newValue","result","String","Number","toFixed","onChangeInputRight","useEffect","Stack","horizontalAlign","verticalAlign","className","style","horizontal","wrap","tokens","childrenGap","Item","grow","Dropdown","selectedKey","undefined","onChange","item","placeholder","options","TextField","myTheme","createTheme","palette","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","App","ThemeProvider","applyTo","theme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","mergeStyles","margin","padding","height","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9ff64a0.chunk.js","sourcesContent":["import { IDropdownOption } from \"@fluentui/react\";\n\nexport const UnitTypes: IDropdownOption[] = [{ key: \"length\", text: \"Length\" }];\n\nexport const LengthUnits: IDropdownOption[] = [\n  { key: \"meter\", text: \"Meter\" },\n  { key: \"kilometer\", text: \"Kilometer\" },\n  { key: \"centimeter\", text: \"Centimeter\" },\n  { key: \"millimeter\", text: \"Millimeter\" },\n  { key: \"micrometer\", text: \"Micrometer\" },\n  { key: \"nanometer\", text: \"Nanometer\" },\n  { key: \"mile\", text: \"Mile\" },\n  { key: \"yard\", text: \"Yard\" },\n  { key: \"foot\", text: \"Foot\" },\n  { key: \"inch\", text: \"Inch\" },\n];\n\nexport const UnitsMap: { [key: string]: IDropdownOption[] } = {\n  length: LengthUnits,\n};\n\nexport const FactorsMap: Record<string, Record<string, number>> = {\n  length: {\n    meter: 1,\n    kilometer: 1000,\n    centimeter: 0.01,\n    millimeter: 0.001,\n    micrometer: 1e+6,\n    nanometer: 1e+9,\n    mile: 1609,\n    yard: 1.094,\n    foot: 3.281,\n    inch: 39.37,\n  },\n};\n","import { FactorsMap } from \"./config\";\n\nexport function convert(\n  type: string,\n  from: string,\n  to: string,\n  value: number\n): number {\n  const result = FactorsMap[type][from] * value;\n  return result / FactorsMap[type][to];\n}\n","import React, { useEffect } from \"react\";\nimport { Stack, Dropdown, IDropdownOption, TextField } from \"@fluentui/react\";\nimport { UnitsMap, UnitTypes } from \"../utils/config\";\nimport { convert } from \"../utils/converter\";\n\nconst fullWidth: React.CSSProperties = {\n  width: \"100%\",\n};\n\nexport const UnitConverter: React.FunctionComponent = () => {\n  const [type, setType] = React.useState<IDropdownOption>(UnitTypes[0]);\n  const [subTypes, setSubTypes] = React.useState<IDropdownOption[]>(\n    UnitsMap[type.key]\n  );\n  const [from, setFrom] = React.useState<IDropdownOption>(subTypes[0]);\n  const [to, setTo] = React.useState<IDropdownOption>(subTypes[0]);\n  const [inputLeft, setInputLeft] = React.useState(\"0\");\n  const [inputRight, setInputRight] = React.useState(\"0\");\n\n  const onTypeChange = (\n    _event: React.FormEvent,\n    item: IDropdownOption<any> | undefined\n  ): void => {\n    if (item) setType(item);\n  };\n\n  const onFromChange = (\n    _event: React.FormEvent,\n    item: IDropdownOption<any> | undefined\n  ): void => {\n    if (item) setFrom(item);\n  };\n\n  const onToChange = (\n    _event: React.FormEvent,\n    item: IDropdownOption<any> | undefined\n  ): void => {\n    if (item) setTo(item);\n  };\n\n  const onChangeInputLeft = React.useCallback(\n    (_event, newValue?: string) => {\n      setInputLeft(newValue || \"\");\n\n      const unitType = String(type.key);\n      const fromUnit = String(from.key);\n      const toUnit = String(to.key);\n      const value = Number(newValue || 0);\n      const result = convert(unitType, fromUnit, toUnit, value);\n      setInputRight(result.toFixed(3));\n    },\n    [type, to, from]\n  );\n\n  const onChangeInputRight = React.useCallback(\n    (_event, newValue?: string) => {\n      setInputRight(newValue || \"\");\n\n      const unitType = String(type.key);\n      const fromUnit = String(to.key);\n      const toUnit = String(from.key);\n      const value = Number(newValue || 0);\n      const result = convert(unitType, fromUnit, toUnit, value);\n      setInputLeft(result.toFixed(3));\n    },\n    [type, to, from]\n  );\n\n  useEffect(() => setSubTypes(UnitsMap[type.key]), [type]);\n\n  useEffect(() => {\n    setInputLeft(\"0\");\n    setInputRight(\"0\");\n  }, [type, from, to]);\n\n  return (\n    <Stack\n      horizontalAlign=\"center\"\n      verticalAlign=\"center\"\n      className=\"Unit__Converter\"\n      style={fullWidth}\n    >\n      <Stack style={fullWidth} horizontal wrap tokens={{ childrenGap: 20 }}>\n        <Stack.Item grow>\n          <Dropdown\n            selectedKey={type ? type.key : undefined}\n            onChange={onTypeChange}\n            placeholder=\"Select an option\"\n            options={UnitTypes}\n          />\n        </Stack.Item>\n      </Stack>\n\n      <br />\n\n      <Stack style={fullWidth} horizontal wrap tokens={{ childrenGap: 20 }}>\n        <Stack.Item grow>\n          <Dropdown\n            selectedKey={from ? from.key : undefined}\n            onChange={onFromChange}\n            placeholder=\"Select an option\"\n            options={subTypes}\n          />\n        </Stack.Item>\n        <Stack.Item grow>\n          <Dropdown\n            selectedKey={to ? to.key : undefined}\n            onChange={onToChange}\n            placeholder=\"Select an option\"\n            options={subTypes}\n          />\n        </Stack.Item>\n      </Stack>\n\n      <br />\n\n      <Stack style={fullWidth} horizontal wrap tokens={{ childrenGap: 20 }}>\n        <Stack.Item grow>\n          <TextField value={inputLeft} onChange={onChangeInputLeft} />\n        </Stack.Item>\n        <Stack.Item grow>\n          <TextField value={inputRight} onChange={onChangeInputRight} />\n        </Stack.Item>\n      </Stack>\n    </Stack>\n  );\n};\n","import React from 'react';\nimport { createTheme, ThemeProvider } from '@fluentui/react';\nimport { UnitConverter } from './components/UnitConverter';\nimport './index.css'\n\nconst myTheme = createTheme({\n  palette: {\n    themePrimary: '#0078d4',\n    themeLighterAlt: '#eff6fc',\n    themeLighter: '#deecf9',\n    themeLight: '#c7e0f4',\n    themeTertiary: '#71afe5',\n    themeSecondary: '#2b88d8',\n    themeDarkAlt: '#106ebe',\n    themeDark: '#005a9e',\n    themeDarker: '#004578',\n    neutralLighterAlt: '#faf9f8',\n    neutralLighter: '#f3f2f1',\n    neutralLight: '#edebe9',\n    neutralQuaternaryAlt: '#e1dfdd',\n    neutralQuaternary: '#d0d0d0',\n    neutralTertiaryAlt: '#c8c6c4',\n    neutralTertiary: '#a19f9d',\n    neutralSecondary: '#605e5c',\n    neutralPrimaryAlt: '#3b3a39',\n    neutralPrimary: '#323130',\n    neutralDark: '#201f1e',\n    black: '#000000',\n    white: '#ffffff',\n  }\n});\n\nexport const App: React.FunctionComponent = () => {\n\n  return (\n    <ThemeProvider applyTo='body' theme={myTheme} className='Base__Div'>\n      <UnitConverter />\n    </ThemeProvider>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { mergeStyles } from '@fluentui/react';\nimport reportWebVitals from './reportWebVitals';\n\n// Inject some global styles\nmergeStyles({\n  ':global(body,html,#root)': {\n    margin: 0,\n    padding: 0,\n    height: '100vh',\n  },\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}