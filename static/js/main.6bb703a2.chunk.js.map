{"version":3,"sources":["constants/config.tsx","components/UnitConverter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["UnitTypes","key","text","fullWidth","width","UnitConverter","React","useState","selectedItem","setSelectedItem","Stack","horizontalAlign","verticalAlign","className","style","Item","Dropdown","selectedKey","undefined","onChange","event","item","index","placeholder","options","myTheme","createTheme","palette","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","App","ThemeProvider","applyTo","theme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","mergeStyles","margin","padding","height","ReactDOM","render","document","getElementById"],"mappings":"kOAEaA,EAA+B,CACxC,CAAEC,IAAK,SAAUC,KAAM,W,QCCrBC,EAAiC,CACnCC,MAAO,QAGEC,EAAyC,WAElD,MAAwCC,IAAMC,SAA0BP,EAAU,IAAlF,mBAAOQ,EAAP,KAAqBC,EAArB,KAMA,OACI,eAACC,EAAA,EAAD,CAAOC,gBAAgB,SAASC,cAAc,SAASC,UAAU,kBAAjE,UACI,cAACH,EAAA,EAAD,CAAOI,MAAOX,EAAd,SACI,cAACO,EAAA,EAAMK,KAAP,UACI,cAACC,EAAA,EAAD,CACIC,YAAaT,EAAeA,EAAaP,SAAMiB,EAC/CC,SAVH,SAACC,EAAwCC,EAAwCC,GAC1FD,GAAMZ,EAAgBY,IAUVE,YAAY,mBACZC,QAASxB,QAIrB,cAACU,EAAA,EAAD,UACI,cAACA,EAAA,EAAMK,KAAP,UCxBVU,G,MAAUC,YAAY,CAC1BC,QAAS,CACPC,aAAc,UACdC,gBAAiB,UACjBC,aAAc,UACdC,WAAY,UACZC,cAAe,UACfC,eAAgB,UAChBC,aAAc,UACdC,UAAW,UACXC,YAAa,UACbC,kBAAmB,UACnBC,eAAgB,UAChBC,aAAc,UACdC,qBAAsB,UACtBC,kBAAmB,UACnBC,mBAAoB,UACpBC,gBAAiB,UACjBC,iBAAkB,UAClBC,kBAAmB,UACnBC,eAAgB,UAChBC,YAAa,UACbC,MAAO,UACPC,MAAO,cAIEC,EAA+B,WAE1C,OACE,cAACC,EAAA,EAAD,CAAeC,QAAQ,OAAOC,MAAO5B,EAASZ,UAAU,YAAxD,SACE,cAAC,EAAD,OCtBSyC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,YAAY,CACV,2BAA4B,CAC1BC,OAAQ,EACRC,QAAS,EACTC,OAAQ,WAIZC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDhB,M","file":"static/js/main.6bb703a2.chunk.js","sourcesContent":["import { IDropdownOption } from \"@fluentui/react\";\n\nexport const UnitTypes: IDropdownOption[] = [\n    { key: 'length', text: 'Length' },\n]","import React from 'react';\nimport { Stack, Dropdown, IDropdownOption } from '@fluentui/react';\nimport { UnitTypes } from '../constants/config';\n\nconst fullWidth: React.CSSProperties = {\n    width: \"100%\"\n};\n\nexport const UnitConverter: React.FunctionComponent = () => {\n\n    const [selectedItem, setSelectedItem] = React.useState<IDropdownOption>(UnitTypes[0]);\n\n    const onChange = (event: React.FormEvent<HTMLDivElement>, item: IDropdownOption<any> | undefined, index?: number | undefined): void => {\n        if (item) setSelectedItem(item);\n    };\n\n    return (\n        <Stack horizontalAlign='center' verticalAlign='center' className='Unit__Converter'>\n            <Stack style={fullWidth}>\n                <Stack.Item>\n                    <Dropdown\n                        selectedKey={selectedItem ? selectedItem.key : undefined}\n                        onChange={onChange}\n                        placeholder=\"Select an option\"\n                        options={UnitTypes}\n                    />\n                </Stack.Item>\n            </Stack>\n            <Stack >\n                <Stack.Item></Stack.Item>\n            </Stack>\n        </Stack>\n    );\n};\n","import React from 'react';\nimport { createTheme, ThemeProvider } from '@fluentui/react';\nimport { UnitConverter } from './components/UnitConverter';\nimport './index.css'\n\nconst myTheme = createTheme({\n  palette: {\n    themePrimary: '#0078d4',\n    themeLighterAlt: '#eff6fc',\n    themeLighter: '#deecf9',\n    themeLight: '#c7e0f4',\n    themeTertiary: '#71afe5',\n    themeSecondary: '#2b88d8',\n    themeDarkAlt: '#106ebe',\n    themeDark: '#005a9e',\n    themeDarker: '#004578',\n    neutralLighterAlt: '#faf9f8',\n    neutralLighter: '#f3f2f1',\n    neutralLight: '#edebe9',\n    neutralQuaternaryAlt: '#e1dfdd',\n    neutralQuaternary: '#d0d0d0',\n    neutralTertiaryAlt: '#c8c6c4',\n    neutralTertiary: '#a19f9d',\n    neutralSecondary: '#605e5c',\n    neutralPrimaryAlt: '#3b3a39',\n    neutralPrimary: '#323130',\n    neutralDark: '#201f1e',\n    black: '#000000',\n    white: '#ffffff',\n  }\n});\n\nexport const App: React.FunctionComponent = () => {\n\n  return (\n    <ThemeProvider applyTo='body' theme={myTheme} className='Base__Div'>\n      <UnitConverter />\n    </ThemeProvider>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { mergeStyles } from '@fluentui/react';\nimport reportWebVitals from './reportWebVitals';\n\n// Inject some global styles\nmergeStyles({\n  ':global(body,html,#root)': {\n    margin: 0,\n    padding: 0,\n    height: '100vh',\n  },\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}