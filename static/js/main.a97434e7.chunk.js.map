{"version":3,"sources":["utils/config.ts","utils/converter.ts","components/UnitConverter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["UnitTypes","key","text","UnitsMap","length","temperature","area","FactorsMap","meter","kilometer","centimeter","millimeter","micrometer","nanometer","mile","yard","foot","inch","celsius","fahrenheit","kelvin","square_meter","square_centimeter","square_kilometer","square_foot","square_inch","square_mile","square_yard","acre","hectare","IncrementMap","convert","type","from","to","value","result","num","BigNumber","factorFrom","factorTo","plus","multipliedBy","dividedBy","minus","toString","fullWidth","width","UnitConverter","React","useState","setType","subTypes","setSubTypes","setFrom","setTo","inputLeft","setInputLeft","inputRight","setInputRight","onChangeInputLeft","useCallback","_event","newValue","String","onChangeInputRight","useEffect","Stack","horizontalAlign","verticalAlign","className","style","horizontal","wrap","Item","grow","Dropdown","selectedKey","undefined","onChange","item","placeholder","options","TextField","myTheme","createTheme","palette","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","App","ThemeProvider","applyTo","theme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","mergeStyles","margin","padding","height","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a97434e7.chunk.js","sourcesContent":["import { IDropdownOption } from \"@fluentui/react\";\n\nexport const UnitTypes: IDropdownOption[] = [\n  { key: \"length\", text: \"Length\" },\n  { key: \"temperature\", text: \"Temperature\" },\n  { key: \"area\", text: \"Area\" },\n];\n\nexport const LengthUnits: IDropdownOption[] = [\n  { key: \"meter\", text: \"Meter\" },\n  { key: \"kilometer\", text: \"Kilometer\" },\n  { key: \"centimeter\", text: \"Centimeter\" },\n  { key: \"millimeter\", text: \"Millimeter\" },\n  { key: \"micrometer\", text: \"Micrometer\" },\n  { key: \"nanometer\", text: \"Nanometer\" },\n  { key: \"mile\", text: \"Mile\" },\n  { key: \"yard\", text: \"Yard\" },\n  { key: \"foot\", text: \"Foot\" },\n  { key: \"inch\", text: \"Inch\" },\n];\n\nexport const TemperatureUnits: IDropdownOption[] = [\n  { key: \"celsius\", text: \"Celsius\" },\n  { key: \"fahrenheit\", text: \"Fahrenheit\" },\n  { key: \"kelvin\", text: \"Kelvin\" },\n];\n\nexport const AreaUnits: IDropdownOption[] = [\n  { key: \"square_meter\", text: \"Square meter\" },\n  { key: \"square_centimeter\", text: \"Square Centimeter\" },\n  { key: \"square_kilometer\", text: \"Square Kilometer\" },\n  { key: \"square_foot\", text: \"Square Foot\" },\n  { key: \"square_inch\", text: \"Square Inch\" },\n  { key: \"square_mile\", text: \"Square Mile\" },\n  { key: \"square_yard\", text: \"Square Yard\" },\n  { key: \"acre\", text: \"Acre\" },\n  { key: \"hectare\", text: \"Hectare\" },\n];\n\nexport const UnitsMap: { [key: string]: IDropdownOption[] } = {\n  length: LengthUnits,\n  temperature: TemperatureUnits,\n  area: AreaUnits\n};\n\nexport const FactorsMap: Record<string, Record<string, number>> = {\n  length: {\n    meter: 1,\n    kilometer: 1000,\n    centimeter: 0.01,\n    millimeter: 0.001,\n    micrometer: 0.000001,\n    nanometer: 1e-9,\n    mile: 1609,\n    yard: 0.9144,\n    foot: 0.3048,\n    inch: 0.0254,\n  },\n  temperature: {\n    celsius: 1,\n    fahrenheit: 0.555555555555,\n    kelvin: 1,\n  },\n  area: {\n    square_meter: 1,\n    square_centimeter: 0.0001,\n    square_kilometer: 1000000,\n    square_foot: 0.09290304,\n    square_inch: 0.00064516,\n    square_mile: 2589988,\n    square_yard: 0.8361274,\n    acre: 4046.856,\n    hectare: 10000,\n  },\n};\n\nexport const IncrementMap: Record<string, Record<string, number>> = {\n  temperature: {\n    celsius: 0,\n    fahrenheit: -32,\n    kelvin: -273.15,\n  },\n};\n","import BigNumber from \"bignumber.js\";\n\nimport { FactorsMap, IncrementMap } from \"./config\";\n\nexport function convert(\n  type: string,\n  from: string,\n  to: string,\n  value: string\n): string {\n  const num = new BigNumber(value);\n  const factorFrom = new BigNumber(FactorsMap[type][from]);\n  const factorTo = new BigNumber(FactorsMap[type][to]);\n  let result: BigNumber;\n  let baseResult: BigNumber;\n\n  if (type === \"temperature\") {\n    baseResult = num.plus(IncrementMap[type][from]);\n  }\n  baseResult = num.multipliedBy(factorFrom);\n  result = baseResult.dividedBy(factorTo);\n\n  if (type === \"temperature\") {\n    result = result.minus(IncrementMap[type][to]);\n  }\n\n  return result.toString();\n}\n","import React, { useEffect } from \"react\";\nimport { Stack, Dropdown, IDropdownOption, TextField } from \"@fluentui/react\";\nimport { UnitsMap, UnitTypes } from \"../utils/config\";\nimport { convert } from \"../utils/converter\";\n\nconst fullWidth: React.CSSProperties = {\n  width: \"100%\",\n};\n\nexport const UnitConverter: React.FunctionComponent = () => {\n  const [type, setType] = React.useState<IDropdownOption>(UnitTypes[0]);\n  const [subTypes, setSubTypes] = React.useState<IDropdownOption[]>(\n    UnitsMap[type.key]\n  );\n  const [from, setFrom] = React.useState<IDropdownOption>(subTypes[0]);\n  const [to, setTo] = React.useState<IDropdownOption>(subTypes[1]);\n  const [inputLeft, setInputLeft] = React.useState(\"0\");\n  const [inputRight, setInputRight] = React.useState(\"0\");\n\n  const onTypeChange = (\n    _event: React.FormEvent,\n    item: IDropdownOption<any> | undefined\n  ): void => {\n    if (item) setType(item);\n  };\n\n  const onFromChange = (\n    _event: React.FormEvent,\n    item: IDropdownOption<any> | undefined\n  ): void => {\n    if (item) setFrom(item);\n  };\n\n  const onToChange = (\n    _event: React.FormEvent,\n    item: IDropdownOption<any> | undefined\n  ): void => {\n    if (item) setTo(item);\n  };\n\n  const onChangeInputLeft = React.useCallback(\n    (_event, newValue?: string) => {\n      setInputLeft(newValue || \"\");\n\n      const unitType = String(type.key);\n      const fromUnit = String(from.key);\n      const toUnit = String(to.key);\n      const value = newValue || \"0\";\n      const result = convert(unitType, fromUnit, toUnit, value);\n      setInputRight(result);\n    },\n    [type, to, from]\n  );\n\n  const onChangeInputRight = React.useCallback(\n    (_event, newValue?: string) => {\n      setInputRight(newValue || \"\");\n\n      const unitType = String(type.key);\n      const fromUnit = String(to.key);\n      const toUnit = String(from.key);\n      const value = newValue || \"0\";\n      const result = convert(unitType, fromUnit, toUnit, value);\n      setInputLeft(result);\n    },\n    [type, to, from]\n  );\n\n  useEffect(() => setSubTypes(UnitsMap[type.key]), [type]);\n  useEffect(() => {\n    setFrom(subTypes[0]);\n    setTo(subTypes[1]);\n  }, [subTypes]);\n\n  useEffect(() => {\n    setInputLeft(\"0\");\n    setInputRight(\"0\");\n  }, [type, from, to]);\n\n  return (\n    <Stack\n      horizontalAlign=\"center\"\n      verticalAlign=\"center\"\n      className=\"Unit__Converter\"\n      style={fullWidth}\n    >\n      <Stack style={fullWidth} horizontal wrap>\n        <Stack.Item grow>\n          <Dropdown\n            selectedKey={type ? type.key : undefined}\n            onChange={onTypeChange}\n            placeholder=\"Select an option\"\n            options={UnitTypes}\n          />\n        </Stack.Item>\n      </Stack>\n\n      <br />\n\n      <Stack style={fullWidth} horizontal wrap>\n        <Stack.Item className=\"Width__49 Padding__Right__1\">\n          <Dropdown\n            selectedKey={from ? from.key : undefined}\n            onChange={onFromChange}\n            placeholder=\"Select an option\"\n            options={subTypes}\n          />\n        </Stack.Item>\n        <Stack.Item className=\"Width__49 Padding__Left__1\">\n          <Dropdown\n            selectedKey={to ? to.key : undefined}\n            onChange={onToChange}\n            placeholder=\"Select an option\"\n            options={subTypes}\n          />\n        </Stack.Item>\n      </Stack>\n\n      <br />\n\n      <Stack style={fullWidth} horizontal wrap>\n        <Stack.Item className=\"Width__49 Padding__Right__1\">\n          <TextField value={inputLeft} onChange={onChangeInputLeft} />\n        </Stack.Item>\n        <Stack.Item className=\"Width__49 Padding__Left__1\">\n          <TextField value={inputRight} onChange={onChangeInputRight} />\n        </Stack.Item>\n      </Stack>\n    </Stack>\n  );\n};\n","import React from \"react\";\nimport { createTheme, ThemeProvider } from \"@fluentui/react\";\nimport { UnitConverter } from \"./components/UnitConverter\";\nimport \"./index.css\";\n\nconst myTheme = createTheme({\n  palette: {\n    themePrimary: \"#0078d4\",\n    themeLighterAlt: \"#eff6fc\",\n    themeLighter: \"#deecf9\",\n    themeLight: \"#c7e0f4\",\n    themeTertiary: \"#71afe5\",\n    themeSecondary: \"#2b88d8\",\n    themeDarkAlt: \"#106ebe\",\n    themeDark: \"#005a9e\",\n    themeDarker: \"#004578\",\n    neutralLighterAlt: \"#faf9f8\",\n    neutralLighter: \"#f3f2f1\",\n    neutralLight: \"#edebe9\",\n    neutralQuaternaryAlt: \"#e1dfdd\",\n    neutralQuaternary: \"#d0d0d0\",\n    neutralTertiaryAlt: \"#c8c6c4\",\n    neutralTertiary: \"#a19f9d\",\n    neutralSecondary: \"#605e5c\",\n    neutralPrimaryAlt: \"#3b3a39\",\n    neutralPrimary: \"#323130\",\n    neutralDark: \"#201f1e\",\n    black: \"#000000\",\n    white: \"#ffffff\",\n  },\n});\n\nexport const App: React.FunctionComponent = () => {\n  return (\n    <ThemeProvider applyTo=\"body\" theme={myTheme} className=\"Base__Div\">\n      <h1>Unit Conveter</h1>\n      <UnitConverter />\n    </ThemeProvider>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { mergeStyles } from '@fluentui/react';\nimport reportWebVitals from './reportWebVitals';\n\n// Inject some global styles\nmergeStyles({\n  ':global(body,html,#root)': {\n    margin: 0,\n    padding: 0,\n    height: '100vh',\n  },\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}