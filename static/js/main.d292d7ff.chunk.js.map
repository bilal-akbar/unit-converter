{"version":3,"sources":["logo.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["boldStyle","root","fontWeight","FontWeights","semibold","stackTokens","childrenGap","stackStyles","width","margin","textAlign","color","App","Stack","horizontalAlign","verticalAlign","verticalFill","styles","tokens","className","src","logo","alt","Text","variant","horizontal","Link","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","mergeStyles","padding","height","ReactDOM","render","document","getElementById"],"mappings":"4MAAe,MAA0B,iC,eCKnCA,EAAkC,CAAEC,KAAM,CAAEC,WAAYC,IAAYC,WACpEC,EAA4B,CAAEC,YAAa,IAC3CC,EAAqC,CACzCN,KAAM,CACJO,MAAO,QACPC,OAAQ,SACRC,UAAW,SACXC,MAAO,YAIEC,EAA+B,WAC1C,OACE,eAACC,EAAA,EAAD,CAAOC,gBAAgB,SAASC,cAAc,SAASC,cAAY,EAACC,OAAQV,EAAaW,OAAQb,EAAjG,UACE,qBAAKc,UAAU,WAAWC,IAAKC,EAAMC,IAAI,SACzC,cAACC,EAAA,EAAD,CAAMC,QAAQ,UAAUP,OAAQjB,EAAhC,2CAGA,cAACuB,EAAA,EAAD,CAAMC,QAAQ,QAAd,kGACA,cAACD,EAAA,EAAD,CAAMC,QAAQ,QAAQP,OAAQjB,EAA9B,6BAGA,eAACa,EAAA,EAAD,CAAOY,YAAU,EAACP,OAAQb,EAAaS,gBAAgB,SAAvD,UACE,cAACY,EAAA,EAAD,CAAMC,KAAK,kEAAX,kBACA,cAACD,EAAA,EAAD,CAAMC,KAAK,8DAAX,4BACA,cAACD,EAAA,EAAD,CAAMC,KAAK,yCAAX,oBACA,cAACD,EAAA,EAAD,CAAMC,KAAK,+BAAX,wBAEF,cAACJ,EAAA,EAAD,CAAMC,QAAQ,QAAQP,OAAQjB,EAA9B,2BAGA,eAACa,EAAA,EAAD,CAAOY,YAAU,EAACP,OAAQb,EAAaS,gBAAgB,SAAvD,UACE,cAACY,EAAA,EAAD,CAAMC,KAAK,mEAAX,mBACA,cAACD,EAAA,EAAD,CAAMC,KAAK,6DAAX,oBACA,cAACD,EAAA,EAAD,CAAMC,KAAK,+BAAX,mCCzBOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,YAAY,CACV,2BAA4B,CAC1B5B,OAAQ,EACR6B,QAAS,EACTC,OAAQ,WAIZC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDf,M","file":"static/js/main.d292d7ff.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.68bf6f88.svg\";","import React from 'react';\nimport { Stack, Text, Link, FontWeights, IStackTokens, IStackStyles, ITextStyles } from '@fluentui/react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst boldStyle: Partial<ITextStyles> = { root: { fontWeight: FontWeights.semibold } };\nconst stackTokens: IStackTokens = { childrenGap: 15 };\nconst stackStyles: Partial<IStackStyles> = {\n  root: {\n    width: '960px',\n    margin: '0 auto',\n    textAlign: 'center',\n    color: '#605e5c',\n  },\n};\n\nexport const App: React.FunctionComponent = () => {\n  return (\n    <Stack horizontalAlign=\"center\" verticalAlign=\"center\" verticalFill styles={stackStyles} tokens={stackTokens}>\n      <img className=\"App-logo\" src={logo} alt=\"logo\" />\n      <Text variant=\"xxLarge\" styles={boldStyle}>\n        Welcome to your Fluent UI app\n      </Text>\n      <Text variant=\"large\">For a guide on how to customize this project, check out the Fluent UI documentation.</Text>\n      <Text variant=\"large\" styles={boldStyle}>\n        Essential links\n      </Text>\n      <Stack horizontal tokens={stackTokens} horizontalAlign=\"center\">\n        <Link href=\"https://developer.microsoft.com/en-us/fluentui#/get-started/web\">Docs</Link>\n        <Link href=\"https://stackoverflow.com/questions/tagged/office-ui-fabric\">Stack Overflow</Link>\n        <Link href=\"https://github.com/microsoft/fluentui/\">Github</Link>\n        <Link href=\"https://twitter.com/fluentui\">Twitter</Link>\n      </Stack>\n      <Text variant=\"large\" styles={boldStyle}>\n        Design system\n      </Text>\n      <Stack horizontal tokens={stackTokens} horizontalAlign=\"center\">\n        <Link href=\"https://developer.microsoft.com/en-us/fluentui#/styles/web/icons\">Icons</Link>\n        <Link href=\"https://developer.microsoft.com/en-us/fluentui#/styles/web\">Styles</Link>\n        <Link href=\"https://aka.ms/themedesigner\">Theme designer</Link>\n      </Stack>\n    </Stack>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { mergeStyles } from '@fluentui/react';\nimport reportWebVitals from './reportWebVitals';\n\n// Inject some global styles\nmergeStyles({\n  ':global(body,html,#root)': {\n    margin: 0,\n    padding: 0,\n    height: '100vh',\n  },\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}